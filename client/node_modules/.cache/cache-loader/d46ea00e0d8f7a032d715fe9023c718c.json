{"remainingRequest":"/Users/zhangqiong/betalpha/node/client/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/zhangqiong/betalpha/node/client/node_modules/babel-loader/lib/index.js??ref--4-3!/Users/zhangqiong/betalpha/node/client/shared/middlewares/fetch.js","dependencies":[{"path":"/Users/zhangqiong/betalpha/node/client/shared/middlewares/fetch.js","mtime":1563327242000},{"path":"/Users/zhangqiong/betalpha/node/client/.babelrc","mtime":1563172830000},{"path":"/Users/zhangqiong/betalpha/node/client/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/zhangqiong/betalpha/node/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangqiong/betalpha/node/client/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangqiong/betalpha/node/client/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9wcm9wIGZyb20gImxvZGFzaC9mcC9wcm9wIjsKCmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhzb3VyY2UsIGV4Y2x1ZGVkKSB7IGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9OyB2YXIgdGFyZ2V0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCk7IHZhciBrZXksIGk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzb3VyY2VTeW1ib2xLZXlzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2UpOyBmb3IgKGkgPSAwOyBpIDwgc291cmNlU3ltYm9sS2V5cy5sZW5ndGg7IGkrKykgeyBrZXkgPSBzb3VyY2VTeW1ib2xLZXlzW2ldOyBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlOyBpZiAoIU9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChzb3VyY2UsIGtleSkpIGNvbnRpbnVlOyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gcmV0dXJuIHRhcmdldDsgfQoKZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCkgeyBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTsgdmFyIHRhcmdldCA9IHt9OyB2YXIgc291cmNlS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7IHZhciBrZXksIGk7IGZvciAoaSA9IDA7IGkgPCBzb3VyY2VLZXlzLmxlbmd0aDsgaSsrKSB7IGtleSA9IHNvdXJjZUtleXNbaV07IGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gcmV0dXJuIHRhcmdldDsgfQoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsga2V5cy5wdXNoLmFwcGx5KGtleXMsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KSk7IH0gaWYgKGVudW1lcmFibGVPbmx5KSBrZXlzID0ga2V5cy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSk7IHJldHVybiBrZXlzOyB9CgpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgaWYgKGkgJSAyKSB7IG93bktleXMoc291cmNlLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pOyB9IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7IH0gZWxzZSB7IG93bktleXMoc291cmNlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IH0gcmV0dXJuIHRhcmdldDsgfQoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH0KCmltcG9ydCAnd2hhdHdnLWZldGNoJzsKdmFyIGZldGNoID0gc2VsZi5mZXRjaC5iaW5kKHNlbGYpOwoKdmFyIGNoZWNrU3RhdHVzID0gZnVuY3Rpb24gY2hlY2tTdGF0dXMocmVzcG9uc2UpIHsKICBpZiAocmVzcG9uc2Uuc3RhdHVzID49IDIwMCAmJiByZXNwb25zZS5zdGF0dXMgPCAzMDApIHsKICAgIHJldHVybiByZXNwb25zZTsKICB9CgogIHRocm93IHJlc3BvbnNlOwp9OwoKdmFyIGRlc2VyaWFsaXplID0gZnVuY3Rpb24gZGVzZXJpYWxpemUocmVzcG9uc2UpIHsKICBpZiAoIXJlc3BvbnNlLmhlYWRlcnMpIHsKICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoewogICAgICBlcnJvcnM6IFt7CiAgICAgICAgZmllbGQ6ICdkZWZhdWx0JywKICAgICAgICBtZXNzYWdlOiByZXNwb25zZS50b1N0cmluZygpCiAgICAgIH1dCiAgICB9KTsKICB9CgogIHZhciBoZWFkZXIgPSByZXNwb25zZS5oZWFkZXJzLmdldCgnQ29udGVudC1UeXBlJykgfHwgJyc7CgogIGlmIChoZWFkZXIuaW5kZXhPZignYXBwbGljYXRpb24vanNvbicpID4gLTEpIHsKICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CiAgfQoKICBpZiAoaGVhZGVyLmluZGV4T2YoJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbScpID4gLTEpIHsKICAgIHJldHVybiByZXNwb25zZS5hcnJheUJ1ZmZlcigpOwogIH0KCiAgcmV0dXJuIHJlc3BvbnNlLnRleHQoKTsKfTsKCnZhciBzdWNjZXNzQnVmZmVyID0gZnVuY3Rpb24gc3VjY2Vzc0J1ZmZlcihuZXh0LCBhY3Rpb24pIHsKICByZXR1cm4gZnVuY3Rpb24gKGRhdGEpIHsKICAgIHJldHVybiBuZXh0KF9vYmplY3RTcHJlYWQoe30sIGFjdGlvbiwgewogICAgICBwYXlsb2FkOiBkYXRhCiAgICB9KSk7CiAgfTsKfTsKCnZhciBoYW5kbGVTdWNjZXNzID0gZnVuY3Rpb24gaGFuZGxlU3VjY2VzcyhfcmVmKSB7CiAgdmFyIHNob3dMb2FkaW5nID0gX3JlZi5zaG93TG9hZGluZzsKICByZXR1cm4gZnVuY3Rpb24gKG5leHQsIGFjdGlvbikgewogICAgcmV0dXJuIGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICByZXR1cm4gZGVzZXJpYWxpemUocmVzcG9uc2UpLnRoZW4oc3VjY2Vzc0J1ZmZlcihuZXh0LCBhY3Rpb24sIHNob3dMb2FkaW5nKSk7CiAgICB9OwogIH07Cn07CgpleHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gKCkgewogIHJldHVybiBmdW5jdGlvbiAobmV4dCkgewogICAgcmV0dXJuIGZ1bmN0aW9uIChhY3Rpb24pIHsKICAgICAgdmFyIHBheWxvYWQgPSBhY3Rpb24ucGF5bG9hZDsKCiAgICAgIGlmIChwYXlsb2FkKSB7CiAgICAgICAgdmFyIHVybCA9IHBheWxvYWQudXJsLAogICAgICAgICAgICBpc0FwaSA9IHBheWxvYWQuaXNBcGksCiAgICAgICAgICAgIHNob3dTZXJ2ZXJFcnJvciA9IHBheWxvYWQuc2hvd1NlcnZlckVycm9yLAogICAgICAgICAgICBfcGF5bG9hZCRzaG93TG9hZGluZyA9IHBheWxvYWQuc2hvd0xvYWRpbmcsCiAgICAgICAgICAgIHNob3dMb2FkaW5nID0gX3BheWxvYWQkc2hvd0xvYWRpbmcgPT09IHZvaWQgMCA/IHRydWUgOiBfcGF5bG9hZCRzaG93TG9hZGluZywKICAgICAgICAgICAgb3B0aW9ucyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhwYXlsb2FkLCBbInVybCIsICJpc0FwaSIsICJzaG93U2VydmVyRXJyb3IiLCAic2hvd0xvYWRpbmciXSk7CgogICAgICAgIGlmIChpc0FwaSkgewogICAgICAgICAgdmFyIGJvZHkgPSBfcHJvcCgnYm9keScpKG9wdGlvbnMpOwoKICAgICAgICAgIHZhciBwcmVzZXRQcm9taXNlID0gUHJvbWlzZS5yZXNvbHZlKGJvZHkpOwogICAgICAgICAgcmV0dXJuIHByZXNldFByb21pc2UudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgIHJldHVybiBmZXRjaCh1cmwsIF9vYmplY3RTcHJlYWQoe30sIG9wdGlvbnMsIHsKICAgICAgICAgICAgICBib2R5OiByZXMsCiAgICAgICAgICAgICAgaGVhZGVyczogX29iamVjdFNwcmVhZCh7fSwgb3B0aW9ucy5oZWFkZXJzLCB7CiAgICAgICAgICAgICAgICAnYWNjZXB0LWxhbmd1YWdlJzogJ3poJwogICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH0pKS50aGVuKGNoZWNrU3RhdHVzLCBmdW5jdGlvbiAoZSkgewogICAgICAgICAgICAgIHZhciBtZXNzYWdlID0gX3Byb3AoJ21lc3NhZ2UnKShlKTsKCiAgICAgICAgICAgICAgdmFyIHNhZmFyaSA9ICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4nOwogICAgICAgICAgICAgIHZhciBmaXJlZm94ID0gJ05ldHdvcmtFcnJvciB3aGVuIGF0dGVtcHRpbmcgdG8gZmV0Y2ggcmVzb3VyY2UuJzsKICAgICAgICAgICAgICB2YXIgZWRnZSA9ICfml6Dms5UgZmV0Y2gnOwogICAgICAgICAgICAgIHZhciBjaHJvbWUgPSAnRmFpbGVkIHRvIGZldGNoJzsKCiAgICAgICAgICAgICAgaWYgKG1lc3NhZ2UubWF0Y2goc2FmYXJpKSB8fCBtZXNzYWdlLm1hdGNoKGZpcmVmb3gpIHx8IG1lc3NhZ2UubWF0Y2goZWRnZSkgfHwgbWVzc2FnZS5tYXRjaChjaHJvbWUpKSB7CiAgICAgICAgICAgICAgICBsb2NhdGlvbi5yZXBsYWNlKCIiLmNvbmNhdCh3aW5kb3cuQ09ORklHLkFQSV9CQVNFX1VSTCwgIi9yZWRpcmVjdCIpKTsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgdGhyb3cgZTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pLnRoZW4oaGFuZGxlU3VjY2Vzcyh7CiAgICAgICAgICAgICAgc2hvd0xvYWRpbmc6IHNob3dMb2FkaW5nCiAgICAgICAgICAgIH0pKG5leHQsIGFjdGlvbikpOwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gbmV4dChhY3Rpb24pOwogICAgfTsKICB9Owp9KTs="},null]}